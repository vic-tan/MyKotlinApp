apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'//使用kapt依赖rxhttp-compiler，需要导入kapt插件

android {
    compileSdkVersion compile_sdk_version as int

    defaultConfig {
        applicationId "com.tanlifei.app"
        minSdkVersion min_sdk_version as int
        targetSdkVersion target_sdk_version as int
        versionCode version_code as int
        versionName version_name
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        rxhttp_rxjava : 'rxjava3',//使用asXxx方法时必须，告知RxHttp你依赖的rxjava版本，可传入rxjava2、rxjava3
                        rxhttp_package: 'rxhttp'   //非必须，指定RxHttp相关类的生成路径，即包名
                ]
            }
        }
        multiDexEnabled true

    }
    //必须，java 8或更高
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release {
            keyAlias 'jiubao'
            keyPassword 'qweqwe123'
            storeFile file('./jiubaozhibo.jks')
            storePassword 'qweqwe123'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            multiDexEnabled true
            zipAlignEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "default"
    productFlavors {

        //开发环境
        dev {
            manifestPlaceholders = [CHANNEL_VALUE: "dev",
                                    app_icon     : "@mipmap/ic_launcher_dev"]
        }
        //测试环境(因为不允许命名为test)
        beta {
            manifestPlaceholders = [CHANNEL_VALUE: "test",
                                    app_icon     : "@mipmap/ic_launcher_test"]
        }

        //正式环境
        pro {
            manifestPlaceholders = [CHANNEL_VALUE: "pro",
                                    app_icon     : "@mipmap/ic_launcher"]
        }

    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def moduleName = rootProject.getName()
            if (variant.buildType.name == 'debug') {
                outputFileName = "${moduleName}_${defaultConfig.versionName}_${variant.flavorName}Debug.apk"
            } else if (variant.buildType.name == 'release') {
                outputFileName = "${moduleName}_${defaultConfig.versionName}_${variant.flavorName}Release.apk"
            }
        }
    }

    buildFeatures {
        viewBinding = true
    }

}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])

    //引入第三方开源库
    implementation project(':module_common')

    //okhttp-RxHttp 以下3个为必须
    //https://github.com/liujingxing/okhttp-RxHttp
    api 'com.ljx.rxlife:rxlife-coroutine:2.0.1'
    api "com.ljx.rxhttp:rxhttp:2.5.4"
    kapt "com.ljx.rxhttp:rxhttp-compiler:2.5.4"

    //okhttp3
    //https://github.com/square/okhttp
    api "com.squareup.okhttp3:okhttp:4.9.0"

    //rxjava3
    //https://github.com/ReactiveX/RxJava
    api 'io.reactivex.rxjava3:rxjava:3.0.6'
    api 'io.reactivex.rxjava3:rxandroid:3.0.0'
    api 'com.ljx.rxlife3:rxlife-rxjava:3.0.0'
    api 'com.github.linger1216:labelview:v1.1.2'


    //环境切换器  正式环境还测试切换切换(打包不影响)
    //https://github.com/CodeXiaoMai/EnvironmentSwitcher
    api "com.xiaomai.environmentswitcher:environmentswitcher:1.5.2"
    kaptDebug "com.xiaomai.environmentswitcher:environmentswitcher-compiler:1.5.3"
    kaptRelease "com.xiaomai.environmentswitcher:environmentswitcher-compiler-release:1.5.3"
}
